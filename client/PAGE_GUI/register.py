#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.22
#  in conjunction with Tcl version 8.6
#    Apr 12, 2019 12:16:04 PM +0300  platform: Windows NT
from client.window_order import fsm

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import register_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    register_support.set_Tk_var()
    top = Toplevel1(root)
    register_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    register_support.set_Tk_var()
    top = Toplevel1(w)
    register_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("453x356+499+309")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.register_frame = ttk.Frame(top)
        self.register_frame.place(relx=0.0, rely=0.0, relheight=0.997
                , relwidth=1.004)
        self.register_frame.configure(relief='groove')
        self.register_frame.configure(borderwidth="2")
        self.register_frame.configure(relief="groove")
        self.register_frame.configure(width=455)

        self.Label1 = tk.Label(self.register_frame)
        self.Label1.place(relx=0.022, rely=0.056, height=30, width=84)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI} -size 12")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Username''')

        self.entry_username = tk.Entry(self.register_frame)
        self.entry_username.place(relx=0.22, rely=0.056, height=30
                , relwidth=0.56)
        self.entry_username.configure(background="white")
        self.entry_username.configure(disabledforeground="#a3a3a3")
        self.entry_username.configure(font="-family {Courier New} -size 12")
        self.entry_username.configure(foreground="#000000")
        self.entry_username.configure(highlightbackground="#d9d9d9")
        self.entry_username.configure(highlightcolor="black")
        self.entry_username.configure(insertbackground="black")
        self.entry_username.configure(selectbackground="#c4c4c4")
        self.entry_username.configure(selectforeground="black")
        self.entry_username.configure(textvariable=register_support.entity_username)

        self.Label2 = tk.Label(self.register_frame)
        self.Label2.place(relx=0.022, rely=0.225, height=30, width=74)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Segoe UI} -size 12")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Password''')

        self.lable_username_error = tk.Label(self.register_frame)
        self.lable_username_error.place(relx=0.22, rely=0.141, height=30
                , width=295)
        self.lable_username_error.configure(activebackground="#f9f9f9")
        self.lable_username_error.configure(activeforeground="black")
        self.lable_username_error.configure(anchor='nw')
        self.lable_username_error.configure(background="#d9d9d9")
        self.lable_username_error.configure(disabledforeground="#a3a3a3")
        self.lable_username_error.configure(foreground="#ff1f1f")
        self.lable_username_error.configure(highlightbackground="#d9d9d9")
        self.lable_username_error.configure(highlightcolor="black")

        self.entry_password = tk.Entry(self.register_frame)
        self.entry_password.place(relx=0.22, rely=0.225, height=30
                , relwidth=0.56)
        self.entry_password.configure(background="white")
        self.entry_password.configure(disabledforeground="#a3a3a3")
        self.entry_password.configure(font="-family {Courier New} -size 12")
        self.entry_password.configure(foreground="#000000")
        self.entry_password.configure(highlightbackground="#d9d9d9")
        self.entry_password.configure(highlightcolor="black")
        self.entry_password.configure(insertbackground="black")
        self.entry_password.configure(selectbackground="#c4c4c4")
        self.entry_password.configure(selectforeground="black")
        self.entry_password.configure(textvariable=register_support.entitiy_password)

        self.lable_password_error = tk.Label(self.register_frame)
        self.lable_password_error.place(relx=0.22, rely=0.31, height=60
                , width=295)
        self.lable_password_error.configure(activebackground="#f9f9f9")
        self.lable_password_error.configure(activeforeground="black")
        self.lable_password_error.configure(anchor='nw')
        self.lable_password_error.configure(background="#d9d9d9")
        self.lable_password_error.configure(disabledforeground="#a3a3a3")
        self.lable_password_error.configure(foreground="#ff1f1f")
        self.lable_password_error.configure(highlightbackground="#d9d9d9")
        self.lable_password_error.configure(highlightcolor="black")

        self.Spinbox_question = tk.Spinbox(self.register_frame, from_=1.0, to=100.0)
        self.Spinbox_question.place(relx=0.22, rely=0.479, relheight=0.085
                , relwidth=0.56)
        self.Spinbox_question.configure(activebackground="#f9f9f9")
        self.Spinbox_question.configure(background="white")
        self.Spinbox_question.configure(buttonbackground="#d9d9d9")
        self.Spinbox_question.configure(disabledbackground="#f0f0f0")
        self.Spinbox_question.configure(disabledforeground="#a3a3a3")
        self.Spinbox_question.configure(font="-family {Segoe UI} -size 12")
        self.Spinbox_question.configure(foreground="black")
        self.Spinbox_question.configure(highlightbackground="black")
        self.Spinbox_question.configure(highlightcolor="black")
        self.Spinbox_question.configure(insertbackground="black")
        self.Spinbox_question.configure(selectbackground="#c4c4c4")
        self.Spinbox_question.configure(selectforeground="black")
        self.Spinbox_question.configure(textvariable=register_support.spinbox_question)
        self.value_list = [1,2,6,79,]
        self.Spinbox_question.configure(values=self.value_list)

        self.Label3 = tk.Label(self.register_frame)
        self.Label3.place(relx=0.022, rely=0.479, height=30, width=74)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font="-family {Segoe UI} -size 12")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Quiestion''')

        self.entry_aswer = tk.Entry(self.register_frame)
        self.entry_aswer.place(relx=0.22, rely=0.676,height=30, relwidth=0.56)
        self.entry_aswer.configure(background="white")
        self.entry_aswer.configure(disabledforeground="#a3a3a3")
        self.entry_aswer.configure(font="-family {Courier New} -size 10")
        self.entry_aswer.configure(foreground="#000000")
        self.entry_aswer.configure(highlightbackground="#d9d9d9")
        self.entry_aswer.configure(highlightcolor="black")
        self.entry_aswer.configure(insertbackground="black")
        self.entry_aswer.configure(selectbackground="#c4c4c4")
        self.entry_aswer.configure(selectforeground="black")
        self.entry_aswer.configure(textvariable=register_support.entity_answer)

        self.lable_question_error = tk.Label(self.register_frame)
        self.lable_question_error.place(relx=0.22, rely=0.563, height=30
                , width=295)
        self.lable_question_error.configure(activebackground="#f9f9f9")
        self.lable_question_error.configure(activeforeground="black")
        self.lable_question_error.configure(anchor='nw')
        self.lable_question_error.configure(background="#d9d9d9")
        self.lable_question_error.configure(disabledforeground="#a3a3a3")
        self.lable_question_error.configure(font="-family {Segoe UI} -size 12")
        self.lable_question_error.configure(foreground="#ff1f1f")
        self.lable_question_error.configure(highlightbackground="#d9d9d9")
        self.lable_question_error.configure(highlightcolor="black")

        self.Label4 = tk.Label(self.register_frame)
        self.Label4.place(relx=0.044, rely=0.676, height=30, width=74)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font="-family {Segoe UI} -size 12")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Answer''')

        self.Button1 = tk.Button(self.register_frame)
        self.Button1.place(relx=0.396, rely=0.845, height=24, width=87)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(command=self.run)
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Register''')

        self.lable_answer_error = tk.Label(self.register_frame)
        self.lable_answer_error.place(relx=0.22, rely=0.761, height=30
                , width=295)
        self.lable_answer_error.configure(activebackground="#f9f9f9")
        self.lable_answer_error.configure(activeforeground="black")
        self.lable_answer_error.configure(background="#d9d9d9")
        self.lable_answer_error.configure(disabledforeground="#a3a3a3")
        self.lable_answer_error.configure(font="-family {Segoe UI} -size 12")
        self.lable_answer_error.configure(foreground="#ff1f1f")
        self.lable_answer_error.configure(highlightbackground="#d9d9d9")
        self.lable_answer_error.configure(highlightcolor="black")
        self.register_frame.bind('<Key-Return>',self.run)

        self.loin_frame = tk.Frame(top)
        self.loin_frame.place(relx=0.0, rely=0.0, relheight=0.997
                , relwidth=1.004)
        self.loin_frame.configure(relief='groove')
        self.loin_frame.configure(borderwidth="2")
        self.loin_frame.configure(relief="groove")
        self.loin_frame.configure(background="#d9d9d9")
        self.loin_frame.configure(highlightbackground="#d9d9d9")
        self.loin_frame.configure(highlightcolor="black")
        self.loin_frame.configure(width=125)

        self.Label11 = tk.Label(self.loin_frame)
        self.Label11.place(relx=0.066, rely=0.085, height=30, width=84)
        self.Label11.configure(activebackground="#f9f9f9")
        self.Label11.configure(activeforeground="black")
        self.Label11.configure(background="#d9d9d9")
        self.Label11.configure(disabledforeground="#a3a3a3")
        self.Label11.configure(font="-family {Segoe UI} -size 12")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(highlightbackground="#d9d9d9")
        self.Label11.configure(highlightcolor="black")
        self.Label11.configure(text='''Username''')

        self.entry_username1 = tk.Entry(self.loin_frame)
        self.entry_username1.place(relx=0.264, rely=0.085, height=30
                , relwidth=0.56)
        self.entry_username1.configure(background="white")
        self.entry_username1.configure(disabledforeground="#a3a3a3")
        self.entry_username1.configure(font="-family {Courier New} -size 12")
        self.entry_username1.configure(foreground="#000000")
        self.entry_username1.configure(highlightbackground="#d9d9d9")
        self.entry_username1.configure(highlightcolor="black")
        self.entry_username1.configure(insertbackground="black")
        self.entry_username1.configure(selectbackground="#c4c4c4")
        self.entry_username1.configure(selectforeground="black")
        self.entry_username1.configure(textvariable=register_support.entity_username)

        self.lable_username_error1 = tk.Label(self.loin_frame)
        self.lable_username_error1.place(relx=0.242, rely=0.197, height=30
                , width=295)
        self.lable_username_error1.configure(activebackground="#f9f9f9")
        self.lable_username_error1.configure(activeforeground="black")
        self.lable_username_error1.configure(anchor='nw')
        self.lable_username_error1.configure(background="#d9d9d9")
        self.lable_username_error1.configure(disabledforeground="#a3a3a3")
        self.lable_username_error1.configure(foreground="#ff1f1f")
        self.lable_username_error1.configure(highlightbackground="#d9d9d9")
        self.lable_username_error1.configure(highlightcolor="black")

        self.Label21 = tk.Label(self.loin_frame)
        self.Label21.place(relx=0.066, rely=0.366, height=30, width=74)
        self.Label21.configure(activebackground="#f9f9f9")
        self.Label21.configure(activeforeground="black")
        self.Label21.configure(background="#d9d9d9")
        self.Label21.configure(disabledforeground="#a3a3a3")
        self.Label21.configure(font="-family {Segoe UI} -size 12")
        self.Label21.configure(foreground="#000000")
        self.Label21.configure(highlightbackground="#d9d9d9")
        self.Label21.configure(highlightcolor="black")
        self.Label21.configure(text='''Password''')

        self.entry_password1 = tk.Entry(self.loin_frame)
        self.entry_password1.place(relx=0.264, rely=0.366, height=30
                , relwidth=0.56)
        self.entry_password1.configure(background="white")
        self.entry_password1.configure(disabledforeground="#a3a3a3")
        self.entry_password1.configure(font="-family {Courier New} -size 12")
        self.entry_password1.configure(foreground="#000000")
        self.entry_password1.configure(highlightbackground="#d9d9d9")
        self.entry_password1.configure(highlightcolor="black")
        self.entry_password1.configure(insertbackground="black")
        self.entry_password1.configure(selectbackground="#c4c4c4")
        self.entry_password1.configure(selectforeground="black")
        self.entry_password1.configure(textvariable=register_support.entitiy_password)

        self.lable_password_error1 = tk.Label(self.loin_frame)
        self.lable_password_error1.place(relx=0.264, rely=0.451, height=60
                , width=295)
        self.lable_password_error1.configure(activebackground="#f9f9f9")
        self.lable_password_error1.configure(activeforeground="black")
        self.lable_password_error1.configure(anchor='nw')
        self.lable_password_error1.configure(background="#d9d9d9")
        self.lable_password_error1.configure(disabledforeground="#a3a3a3")
        self.lable_password_error1.configure(foreground="#ff1f1f")
        self.lable_password_error1.configure(highlightbackground="#d9d9d9")
        self.lable_password_error1.configure(highlightcolor="black")

        self.Button2 = tk.Button(self.loin_frame)
        self.Button2.place(relx=0.396, rely=0.704, height=34, width=97)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(command=self.login)
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''login''')
        self.Button2.configure(width=97)

        self.Button3 = tk.Button(self.loin_frame)
        self.Button3.place(relx=0.681, rely=0.704, height=34, width=67)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(command=lambda: self.update('show_register'))
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''register''')
        self.Button3.configure(width=67)

    def login(self):
            print('self.login')
            sys.stdout.flush()

    def run(self):
            print('self.run')
            sys.stdout.flush()

    def update(self, action):
        fsm.trigger(action)
        self.raise_frame(fsm)


    def raise_frame(self, fsm):
        if fsm.is_state('register_frame'):
            self.register_frame.tkraise()
        if fsm.is_state('login_frame'):
            self.loin_frame.tkraise()

if __name__ == '__main__':
    vp_start_gui()





